-- Create main table if not exists
CREATE TABLE IF NOT EXISTS {bq_project}.{bq_dataset}.{table_name} (
    idInvent INT64,
    idWarehouse INT64,
    idSuppliers STRING,
    idProduct INT64,
    SKU STRING,
    stock INT64,
    AllocatedStock INT64,
    LastUpdated TIMESTAMP,
    ExpDate STRING,
    OnOrder INT64,
    AdjustQty STRING,
    isManual BOOL,
    Reason STRING,
    QtyLast0 TIMESTAMP,
    QtyLastStock TIMESTAMP,
    VendorSku STRING,
    Cost FLOAT64,
    SCost STRING,
    SCostToDate STRING,
    StockActive INT64,
    invOff STRING,
    ExportCost STRING,
    isMatched STRING,
    ReservQty INT64,
    ReservKitsQty STRING,
    ReservQty1 STRING,
    ReservKitsQty1 STRING,
    Location STRING,
    LastStock INT64,
    Restock BOOL,
    Transfer INT64,
    OnWater INT64,
    LastLocation STRING,
    Discontinued INT64,
    DateAdded STRING,
    ONPO INT64,
    VerifyDate TIMESTAMP,
    VerifyBy INT64,
    ReserveManual INT64,
    ReserveBOM INT64,
    TotalInventory INT64,
    TotalIncoming INT64,
    RemapSKU STRING
);

-- Merge data from temp table to main table
MERGE {bq_project}.{bq_dataset}.{table_name} AS MAIN
USING {bq_project}.{bq_dataset}.{temp_table_name} AS TEMP
ON MAIN.idInvent = TEMP.idInvent
WHEN MATCHED THEN
    UPDATE SET
        MAIN.idInvent = TEMP.idInvent,
        MAIN.idWarehouse = TEMP.idWarehouse,
        MAIN.idSuppliers = TEMP.idSuppliers,
        MAIN.idProduct = TEMP.idProduct,
        MAIN.SKU = TEMP.SKU,
        MAIN.stock = TEMP.stock,
        MAIN.AllocatedStock = TEMP.AllocatedStock,
        MAIN.LastUpdated = TEMP.LastUpdated,
        MAIN.ExpDate = TEMP.ExpDate,
        MAIN.OnOrder = TEMP.OnOrder,
        MAIN.AdjustQty = TEMP.AdjustQty,
        MAIN.isManual = TEMP.isManual,
        MAIN.Reason = TEMP.Reason,
        MAIN.QtyLast0 = TEMP.QtyLast0,
        MAIN.QtyLastStock = TEMP.QtyLastStock,
        MAIN.VendorSku = TEMP.VendorSku,
        MAIN.Cost = TEMP.Cost,
        MAIN.SCost = TEMP.SCost,
        MAIN.SCostToDate = TEMP.SCostToDate,
        MAIN.StockActive = TEMP.StockActive,
        MAIN.invOff = TEMP.invOff,
        MAIN.ExportCost = TEMP.ExportCost,
        MAIN.isMatched = TEMP.isMatched,
        MAIN.ReservQty = TEMP.ReservQty,
        MAIN.ReservKitsQty = TEMP.ReservKitsQty,
        MAIN.ReservQty1 = TEMP.ReservQty1,
        MAIN.ReservKitsQty1 = TEMP.ReservKitsQty1,
        MAIN.Location = TEMP.Location,
        MAIN.LastStock = TEMP.LastStock,
        MAIN.Restock = TEMP.Restock,
        MAIN.Transfer = TEMP.Transfer,
        MAIN.OnWater = TEMP.OnWater,
        MAIN.LastLocation = TEMP.LastLocation,
        MAIN.Discontinued = TEMP.Discontinued,
        MAIN.DateAdded = TEMP.DateAdded,
        MAIN.ONPO = TEMP.ONPO,
        MAIN.VerifyDate = TEMP.VerifyDate,
        MAIN.VerifyBy = TEMP.VerifyBy,
        MAIN.ReserveManual = TEMP.ReserveManual,
        MAIN.ReserveBOM = TEMP.ReserveBOM,
        MAIN.TotalInventory = TEMP.TotalInventory,
        MAIN.TotalIncoming = TEMP.TotalIncoming,
        MAIN.RemapSKU = TEMP.RemapSKU
WHEN NOT MATCHED THEN
INSERT VALUES (
    TEMP.idInvent,
    TEMP.idWarehouse,
    TEMP.idSuppliers,
    TEMP.idProduct,
    TEMP.SKU,
    TEMP.stock,
    TEMP.AllocatedStock,
    TEMP.LastUpdated,
    TEMP.ExpDate,
    TEMP.OnOrder,
    TEMP.AdjustQty,
    TEMP.isManual,
    TEMP.Reason,
    TEMP.QtyLast0,
    TEMP.QtyLastStock,
    TEMP.VendorSku,
    TEMP.Cost,
    TEMP.SCost,
    TEMP.SCostToDate,
    TEMP.StockActive,
    TEMP.invOff,
    TEMP.ExportCost,
    TEMP.isMatched,
    TEMP.ReservQty,
    TEMP.ReservKitsQty,
    TEMP.ReservQty1,
    TEMP.ReservKitsQty1,
    TEMP.Location,
    TEMP.LastStock,
    TEMP.Restock,
    TEMP.Transfer,
    TEMP.OnWater,
    TEMP.LastLocation,
    TEMP.Discontinued,
    TEMP.DateAdded,
    TEMP.ONPO,
    TEMP.VerifyDate,
    TEMP.VerifyBy,
    TEMP.ReserveManual,
    TEMP.ReserveBOM,
    TEMP.TotalInventory,
    TEMP.TotalIncoming,
    TEMP.RemapSKU
)
