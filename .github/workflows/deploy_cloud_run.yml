name: Deploy Cloud Run

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "app/**"
      - "Dockerfile"
      - ".github/workflows/deploy_cloud_run.yml"
  workflow_dispatch:

concurrency:
  group: "Cloud Run"
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'Production' || 'Development' }}
    steps:
      - uses: "actions/checkout@v4"

      - id: auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.SERVICE_ACCOUNT }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ vars.PROJECT_ID }}

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "_json_key"
          password: "${{ secrets.SERVICE_ACCOUNT }}"
          registry: "${{ vars.REGION }}-docker.pkg.dev"

      - name: Secret files
        run: |-
          echo '${{ secrets.SERVICE_ACCOUNT }}' > ./app/service_account.json
          echo "${{ secrets.SSH_KEY }}" > ./ssh.key

      - name: Build, tag and push container
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }}

      - name: Deploy Cloud Run
        id: cloud-run
        run: |-
          echo "Deploying to Cloud Run"
          gcloud run deploy ${{ vars.SERVICE_NAME }} \
            --image ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPO }}/${{ vars.SERVICE_NAME }} \
            --platform managed \
            --allow-unauthenticated \
            --region ${{ vars.REGION }} \
            --service-account ${{ vars.SERVICE_ACCOUNT_NAME }} \
            --timeout 540s \
            --cpu 1 \
            --memory 2Gi \
            --timeout 540s \
            --concurrency 1 \
            --port 80 \
            --max-instances 100 \
            --set-env-vars "SSH_HOST=${{ vars.SSH_HOST }}" \
            --set-env-vars "SSH_PORT=${{ vars.SSH_PORT }}" \
            --set-env-vars "SSH_USERNAME=${{ vars.SSH_USERNAME }}" \
            --set-env-vars "DB_HOST=${{ vars.DB_HOST }}" \
            --set-env-vars "DB_PORT=${{ vars.DB_PORT }}" \
            --set-env-vars "DB_USERNAME=${{ vars.DB_USERNAME }}" \
            --set-env-vars "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
            --set-env-vars "DB_NAME=${{ vars.DB_NAME }}" \
            --set-env-vars "BQ_PROJECT=${{ vars.PROJECT_ID }}" \
            --set-env-vars "BQ_DATASET=${{ vars.BQ_DATASET }}" \
            --set-env-vars "GCS_BUCKET=${{ vars.GCS_BUCKET }}"
